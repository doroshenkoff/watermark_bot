from flatlib import const
from flatlib.chart import Chart
from flatlib.datetime import Datetime
from flatlib.geopos import GeoPos

from datetime import datetime
import googlemaps
import config
from collections import namedtuple

gmaps = googlemaps.Client(config.GOOGLE_API_KEY)

HOUSES = {1: 'I', 2: 'II', 3: 'III', 4: 'IV', 5: 'V', 6: 'VI', 7: 'VII',
          8: 'VIII', 9: 'IX', 10: 'X', 11: 'XI', 12: 'XII'}


HoroscopeItems = namedtuple('HoroscopeItems', 'name flatlib_name, display')

HOROSCOPE_ITEMS = [
    HoroscopeItems('sun', const.SUN, '‚òâ –°–æ–ª–Ω—Ü–µ'),
    HoroscopeItems('moon', const.MOON, 'üåô –õ—É–Ω–∞'),
    HoroscopeItems('mercury', const.MERCURY, '‚òø –ú–µ—Ä–∫—É—Ä–∏–π'),
    HoroscopeItems('venus', const.VENUS, '‚ôÄ –í–µ–Ω–µ—Ä–∞'),
    HoroscopeItems('mars', const.MARS, '‚ôÇ –ú–∞—Ä—Å'),
    HoroscopeItems('jupiter', const.JUPITER, '‚ôÉ –Æ–ø–∏—Ç–µ—Ä'),
    HoroscopeItems('saturn', const.SATURN, '‚ôÑ –°–∞—Ç—É—Ä–Ω'),
    HoroscopeItems('asc', const.ASC, 'ASC –ê—Å—Ü–µ–Ω–¥–µ–Ω—Ç'),
    HoroscopeItems('mc', const.MC, 'MC Medium Coeli')
]

ZODIAC_ITEMS = {
    'Aries': '‚ôà –û–≤–µ–Ω',
    'Taurus': '‚ôâ –¢–µ–ª–µ—Ü',
    'Gemini': '‚ôä –ë–ª–∏–∑–Ω–µ—Ü—ã',
    'Cancer': '‚ôã –†–∞–∫',
    'Leo': '‚ôå –õ–µ–≤',
    'Virgo': '‚ôç –î–µ–≤–∞',
    'Libra': '‚ôé –í–µ—Å—ã',
    'Scorpio': '‚ôè –°–∫–æ—Ä–∏–æ–Ω',
    'Sagittarius': '‚ôê –°—Ç—Ä–µ–ª–µ—Ü',
    'Capricorn': '‚ôë –ö–æ–∑–µ—Ä–æ–≥',
    'Aquarius': '‚ôí –í–æ–¥–æ–ª–µ–π',
    'Pisces': '‚ôì –†—ã–±—ã'
}


def get_horoscope(position='–ö–∏–µ–≤'):
    loc = gmaps.geocode(position)[0]['geometry']['location']
    now = datetime.now()
    date_params = now.strftime("%Y/%m/%d"), now.strftime("%H:%M"), '+03:00'

    chart = Chart(Datetime(*date_params), GeoPos(*loc.values()))
    houses = [(house.id.replace('House', ''), house.lon) for house in chart.houses]
    houses.sort(key=lambda h: h[1])
    out = ''
    for item in HOROSCOPE_ITEMS:
        planet = chart.get(item.flatlib_name)

        for i, h in enumerate(houses):
            try:
                if planet.lon < h[1]:
                    house = int(houses[i - 1][0])
                    break
            except:
                house = 1
                break
        else:
            house = int(houses[-1][0])

        details = str(planet).split(' ')
        pos = details[2].split(":")
        out += f"{item.display}:  {ZODIAC_ITEMS.get(details[1], details[1])} {pos[0][1:]}¬∞{pos[1]}, " \
               f"<b>{HOUSES[house]} –¥–æ–º</b>\n"
    return out


if __name__ == '__main__':
    print(get_horoscope())

